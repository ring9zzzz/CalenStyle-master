<!DOCTYPE html>

<html>

	<head>
	
		<title>Week View</title>
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	
		<script type="text/javascript" src="js/jquery-1.11.1.min.js"></script>
		<script type="text/javascript" src="js/jquery-ui-custom-1.11.2.min.js"></script>
    	<link rel="stylesheet" type="text/css" href="css/jquery-ui-custom-1.11.2.min.css" />
    	
		<link rel="stylesheet" type="text/css" href="../src/calenstyle.css" />
		<link rel="stylesheet" type="text/css" href="../src/calenstyle-jquery-ui-override.css" />
		<link rel="stylesheet" type="text/css" href="../src/calenstyle-iconfont.css" />
		<script type="text/javascript" src="../src/calenstyle.js"></script>
	
		<script type="text/javascript" src="js/CalJsonGenerator.js"></script>
	
		<style type="text/css">
		
			.calendarContOuter
			{
            	width: 90%;
				height: 600px;
				margin: 0px auto;
            
				font-size: 14px;
			}
		
		</style>
	
		<script type="text/javascript">
		
			$(function()
			{
			
				$(".calendarContOuter").CalenStyle(
				{
				
					sectionsList: ["Header", "Calendar"],
				
					visibleView: "WeekView", // "DetailedMonthView"

					//isTooltipInDetailView: false,
				
					inputTZOffset: "+04:00",

					outputTZOffset: "-08:00",
				
					calDataSource: 
					[					
						{
							sourceFetchType: "DateRange",
							sourceType: "FUNCTION",
							source: function(fetchStartDate, fetchEndDate, durationStartDate, durationEndDate, oConfig, loadViewCallback)
							{
								var calObj1 = this;
								calObj1.incrementDataLoadingCount(1);
							
								var oEventResponse = generateJsonEvents(fetchStartDate, fetchEndDate);
								if(oEventResponse != undefined)
								{
									if(oEventResponse[0])
									{
										calObj1.parseDataSource("eventSource", oEventResponse[1], durationStartDate, durationEndDate, loadViewCallback, oConfig, false);
									}
								}
							}
						}
					],
				
					saveChangesOnEventDrop: function(oDraggedEvent, startDateBeforeDrop, endDateBeforeDrop, startDateAfterDrop, endDateAfterDrop)
					{
						var calObj1 = this;
					
						console.log("saveChangesOnEventDrop : ");
						console.log(oDraggedEvent);
						console.log(startDateAfterDrop);
						console.log(endDateAfterDrop);
					
						//calObj1.revertToOriginalEvent(oDraggedEvent, startDateBeforeDrop, endDateBeforeDrop);
					},
				
					saveChangesOnEventResize: function(oResizedEvent, startDateBeforeResizing, endDateBeforeResizing, startDateAfterResizing, endDateAfterResizing)
					{
						var calObj1 = this;
					
						console.log(oResizedEvent);
						console.log(startDateAfterResizing);
						console.log(endDateAfterResizing);
					
						//calObj1.revertToOriginalEvent(oResizedEvent, startDateBeforeResizing, endDateBeforeResizing);
					},
				
					cellClicked: function(selectedDateTime, pClickedAt)
					{
						console.log("Cell Clicked");
						console.log(selectedDateTime);
					}
				
				});
			
			});
			
		</script>
	
	</head>

	<body>
	
		<div class="calendarContOuter"></div>
	
	</body>

</html>