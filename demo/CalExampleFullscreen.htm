<!DOCTYPE html>

<html>

	<head>
	
		<title>Fullscreen</title>
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
	
		<script type="text/javascript" src="js/jquery-1.11.1.min.js"></script>
		<script type="text/javascript" src="js/jquery-ui-custom-1.11.2.min.js"></script>
    	<link rel="stylesheet" type="text/css" href="css/jquery-ui-custom-1.11.2.min.css" />
    
		<link rel="stylesheet" type="text/css" href="../src/calenstyle.css" />
		<link rel="stylesheet" type="text/css" href="../src/calenstyle-jquery-ui-override.css" />
		<link rel="stylesheet" type="text/css" href="../src/calenstyle-iconfont.css" />
		<script type="text/javascript" src="../src/calenstyle.js"></script>
	
		<script type="text/javascript" src="js/CalJsonGenerator.js"></script>
	
		<style type="text/css">
		
			.calendarContOuterParent
			{
				width: 100%;
				height: 600px;
				margin: 0px auto;
			}
		
			.calendarContOuter
			{			
				width: 1000px;
				height: 500px;
				margin: 0px auto;
            
            	font-size: 14px;
			}
		
		</style>
	
		<script type="text/javascript">
		
			$(function() 
			{
			
				$(".calendarContOuter").CalenStyle(
				{
					headerSectionsList: 
					{
						left: ["DatePickerIcon", "FullscreenButton", "PreviousButton", "NextButton"],
						center: ["HeaderLabel"],
						right: ["MenuSegmentedTab"]
					},
					
					viewsToDisplay: [
										{ 
											viewName: "DetailedMonthView",
											viewDisplayName: "Month"
										},
										{ 
											viewName: "MonthView",
											viewDisplayName: "Month"
										},
										{ 
											viewName: "WeekView",
											viewDisplayName: "Week"
										},
										{ 
											viewName: "DayView",
											viewDisplayName: "Day"
										},
										{ 
											viewName: "AgendaView",
											viewDisplayName: "Agenda"
										}
									],
				
					calDataSource: 
					[
						{
							sourceFetchType: "DateRange",
							sourceType: "FUNCTION",						
							source: function(fetchStartDate, fetchEndDate, durationStartDate, durationEndDate, oConfig, loadViewCallback)
							{
								var calObj1 = this;
								calObj1.incrementDataLoadingCount(1);
							
								var oEventResponse = generateJsonEvents(fetchStartDate, fetchEndDate);
								console.log("Response " + fetchStartDate + " " + fetchEndDate);
								console.log(oEventResponse);
								if(oEventResponse != undefined)
								{
									if(oEventResponse[0])
									{
										calObj1.parseDataSource("eventSource", oEventResponse[1], durationStartDate, durationEndDate, loadViewCallback, oConfig, false);
									}
								}
							}
						}
					],
				
					saveChangesOnEventDrop: function(oDraggedEvent, startDateBeforeDrop, endDateBeforeDrop, startDateAfterDrop, endDateAfterDrop)
					{
						var calObj1 = this;
					
						console.log(oDraggedEvent);
						console.log(startDateAfterDrop);
						console.log(endDateAfterDrop);
					
						//calObj1.revertToOriginalEvent(oDraggedEvent, startDateBeforeDrop, endDateBeforeDrop);
					},
				
					cellClicked: function(sView, dSelectedDate, bIsAllDay, pClickedAt)
					{
						console.log("Cell Clicked : " + dSelectedDate);
					}
				
				});
						
			});
			
		</script>
	
	</head>

	<body>
	
		<div class="calendarContOuterParent">
			<div class="calendarContOuter"></div>
		</div>
	
	</body>

</html>